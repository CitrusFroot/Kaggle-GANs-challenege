2023-05-10 20:32:48,067 | INFO: makeGenerator called.	imgDim: (256, 256, 3)

2023-05-10 20:32:48,111 | INFO: hConvLayer0 created. Value: KerasTensor(type_spec=TensorSpec(shape=(None, 256, 256, 64), dtype=tf.float32, name=None), name='leaky_re_lu_4/LeakyRelu:0', description="created by layer 'leaky_re_lu_4'")	Target activation size: (256, 256, 64)
2023-05-10 20:32:48,154 | INFO: hConvLayer1 created. Value: KerasTensor(type_spec=TensorSpec(shape=(None, 128, 128, 128), dtype=tf.float32, name=None), name='leaky_re_lu_5/LeakyRelu:0', description="created by layer 'leaky_re_lu_5'")	Target activation size: (128,128,128)
2023-05-10 20:32:48,212 | INFO: hConvLayer2 created. Value: KerasTensor(type_spec=TensorSpec(shape=(None, 64, 64, 256), dtype=tf.float32, name=None), name='leaky_re_lu_6/LeakyRelu:0', description="created by layer 'leaky_re_lu_6'")	Target activation size: (64, 64, 256)
2023-05-10 20:32:48,213 | INFO: getResNetBlock called. values:	imgDim: 256	kernelDim: (3, 3)	stride: (2, 2)	padding: same	input: KerasTensor(type_spec=TensorSpec(shape=(None, 64, 64, 256), dtype=tf.float32, name=None), name='leaky_re_lu_6/LeakyRelu:0', description="created by layer 'leaky_re_lu_6'")
2023-05-10 20:32:48,275 | INFO: resLayer0 created. Value: KerasTensor(type_spec=TensorSpec(shape=(None, 32, 32, 256), dtype=tf.float32, name=None), name='activation/Relu:0', description="created by layer 'activation'")	Target activation size: (256,64,64)
2023-05-10 20:32:48,333 | INFO: resLayer1 created. Value: KerasTensor(type_spec=TensorSpec(shape=(None, 16, 16, 256), dtype=tf.float32, name=None), name='activation_1/Relu:0', description="created by layer 'activation_1'")	Target activation size: (256,64,64)
